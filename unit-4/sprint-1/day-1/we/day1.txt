11. What are the benefits of using Object-oriented Languages
+++++++++++++++++++++++++++++++++++++++++++++++

1. Modularity for easier troubleshooting
encapsulation
2. Reuse of code through inheritance
3. Flexibility through polymorphism
4. Effective problem solving
+++++++++++++++++++++++++++++++++++++++++++++++
2. What are the Memory Allocation available in java ?
In Java, memory management is the process of allocation and 
de-allocation of objects, called Memory management. Java
 does memory management automatically. Java uses an 
automatic memory management system called a garbage 
collector

JVM Memory Structure
Working of the Garbage Collector

=============================================
3. Difference between JDK, JRE and JVM
1.JDK is a software development kit whereas
 JRE is a software bundle that allows Java program to run,
 whereas JVM is an environment for executing bytecode.

2.The full form of JDK is Java Development Kit, 
while the full form of JRE is Java Runtime Environment,
 while the full form of JVM is Java Virtual Machine.

3.JDK is platform dependent,
 JRE is also platform dependent, 
but JVM is not platform independent.

4.JDK contains tools for developing, debugging, etc.
 JRE contains class libraries and other supporting files, 
whereas software development tools are not included in JVM.

5.JDK comes with the installer, 
on the other hand, JRE only contains the environment to execute source code whereas 
JVM bundled in both software JDK and JRE.
=============================================================
4. Why is java platform independent?
Whenever we enter a statement “javac filename.java”
 or compile a code in java, javac compiles the code.
 And it creates an intermediate code called Byte Code.

This is where java makes difference between all
 different programming languages. It creates a 
.class file, which is considered as byte code. 
Whereas languages like c/c++ will create a natively 
executable code when they are compiled and thus
 makes them platform dependent.

Hold on, this is too early for celebration. 
This byte code is not executable.
 We need a translator for executing 
this byte code. And JVM does this job. 
Generally, JVM resides in the main memory 
of our computer. Java Virtual Machine acts 
as an interpreter and then executes the byte 
code generated by javac.

And now we are done, our code gets
 executed successfully.



So how does java going to manage it all alone?

And the answer would be, it’s
 because of the JVM. The byte 
code generated by source code 
compilation would run in any 
operating system, but the JVM 
present in a machine differs 
for each operating system. And
 this is how java is considered 
a platform-independent programming language.

=================================================
5. Why is Java not completely object-oriented?
Pure Object Oriented Language or Complete Object Oriented Language are 
Fully Object Oriented Language which supports or have features which 
treats everything inside program as objects. It doesn’t support primitive
 datatype(like int, char, float, bool, etc.). 
There are seven qualities to be satisfied for
 a programming language to be pure Object Oriented. They are:

1.Encapsulation/Data Hiding
2.Inheritance
3.Polymorphism
4.Abstraction
5.All predefined types are objects
6.All user defined types are objects
7.All operations performed on objects must be only through methods exposed at the objects.

Java supports property 1, 2, 3, 4 and 6 
but fails to support property 5 and 7 given above. 

Java language is not a Pure Object Oriented Language as it contain these properties:

Primitive Data Type
 ex. int, long, bool, float, char, etc as Objects: 
============================================================
6. Can we overload a static method?
No, we cannot override static methods 
because method overriding is based on
 dynamic binding at runtime and the 
static methods are bonded using static 
binding at compile time. 
So, we cannot override static methods.
==============================================
7. Is it possible to use static keywords with classes.If yes demonstrate
where and how
A class can be made static only if it is a nested class. We cannot declare a top-level

 class with a static modifier but can declare nested 
classes as static. Such types of classes are called 
Nested static classes. Nested static class doesn’t 
need a reference of Outer class. In this case, 
a static class cannot access non-static members of the Outer class. 
import java.io.*;
  
public class GFG {
  
    private static String str = "ChandanKumarSinghji!";
  
    // Static class
    static class MyNestedClass {
        
        // non-static method
        public void disp(){ 
          System.out.println(str); 
        }
    }
    
    public static void main(String args[])
    {
        GFG.MyNestedClass obj
            = new GFG.MyNestedClass();
        obj.disp();
    }
}
==============================================================
8. Define Wrapper Classes in Java.Why are wrapper classes used when
there are already primitive data types
A Wrapper class is a class which contains the primitive data types (int, char, short, byte, etc).

1.Wrapper Class will convert primitive data types into objects. 
The objects are necessary if we wish to modify the arguments
 passed into the method (because primitive types are passed by value).

2.The classes in java.util package handles only objects and hence wrapper classes help in this case also.

3.Data structures in the Collection framework such as ArrayList and Vector store only the objects (reference types) and not the primitive types.

4.The object is needed to support synchronization in multithreading.
=========================================================================
9. What happens when the main() isn't declared as static?
Main is always the first method to be called ,it is actually 
the starting point of any program and this is how every program executes.
Needless to say this but since this is the first method to get executed 
,so the object for that class is not even declared yet.

But we had already seen in a class an object carry the highest preference
 i.e it invoke everything and if it’s not the object than the methods 
or variable should be declared static .

Hence Main() is declared static if not so program wouldn’t be able to
 call it even before the object for the class is created.

If you don’t declare main static a run-time error will occur saying main() is not declared yet.
================================================================================================
10. Will the program run if we write static public void main() instead of
public static void main()?
No problem execution will be done perfectly....But coding always have procedure so, in that case we need provide appropriate 
declaration of the program and then only we able understand easily. also other developer also understand easily.

